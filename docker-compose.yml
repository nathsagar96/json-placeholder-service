services:
  loki:
    image: grafana/loki
    container_name: loki
    command:
      - -config.file=/etc/loki/local-config.yaml
    ports:
      - "3100:3100"
    networks:
      - json-placeholder-service-network
  prometheus:
    image: prom/prometheus
    container_name: prometheus
    command:
      - --enable-feature=exemplar-storage
      - --config.file=/etc/prometheus/prometheus.yml
    volumes:
      - ./docker/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    ports:
      - "9090:9090"
    networks:
      - json-placeholder-service-network
  tempo:
    image: grafana/tempo
    container_name: tempo
    command:
      - -config.file=/etc/tempo.yaml
    volumes:
      - ./docker/tempo/tempo.yml:/etc/tempo.yaml:ro
      - ./data/tempo:/tmp/tempo
    ports:
      - "3110:3100" # Tempo
      - "9411:9411" # zipkin
    networks:
      - json-placeholder-service-network
  grafana:
    image: grafana/grafana
    container_name: grafana
    volumes:
      - ./docker/grafana:/etc/grafana/provisioning/datasources:ro
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_DISABLE_LOGIN_FORM=true
    ports:
      - "3000:3000"
    networks:
      - json-placeholder-service-network
  config-server:
    container_name: config-server
    build:
      context: ./config-server/
      dockerfile: Dockerfile
    ports:
      - "8888:8888"
    networks:
      - json-placeholder-service-network
  service-registry:
    container_name: service-registry
    build:
      context: ./service-registry/
      dockerfile: Dockerfile
    ports:
      - "8761:8761"
    networks:
      - json-placeholder-service-network
    environment:
      - SPRING_PROFILES_ACTIVE=docker
  post-service:
    container_name: post-service
    build:
      context: ./post-service
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    networks:
      - json-placeholder-service-network
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - loki
      - prometheus
      - tempo
      - grafana
      - config-server
      - service-registry
  comment-service:
    container_name: comment-service
    build:
      context: ./comment-service
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    networks:
      - json-placeholder-service-network
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - loki
      - prometheus
      - tempo
      - grafana
      - config-server
      - service-registry
  album-service:
    container_name: album-service
    build:
      context: ./album-service
      dockerfile: Dockerfile
    ports:
      - "8082:8082"
    networks:
      - json-placeholder-service-network
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - loki
      - prometheus
      - tempo
      - grafana
      - config-server
      - service-registry
  photo-service:
    container_name: photo-service
    build:
      context: ./photo-service
      dockerfile: Dockerfile
    ports:
      - "8083:8083"
    networks:
      - json-placeholder-service-network
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - loki
      - prometheus
      - tempo
      - grafana
      - config-server
      - service-registry
  todo-service:
    container_name: todo-service
    build:
      context: ./todo-service
      dockerfile: Dockerfile
    ports:
      - "8084:8084"
    networks:
      - json-placeholder-service-network
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - loki
      - prometheus
      - tempo
      - grafana
      - config-server
      - service-registry
  user-service:
    container_name: user-service
    build:
      context: ./user-service
      dockerfile: Dockerfile
    ports:
      - "8085:8085"
    networks:
      - json-placeholder-service-network
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - loki
      - prometheus
      - tempo
      - grafana
      - config-server
      - service-registry
  api-gateway:
    container_name: api-gateway
    build:
      context: ./api-gateway/
      dockerfile: Dockerfile
    ports:
      - "8090:8090"
    networks:
      - json-placeholder-service-network
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - loki
      - prometheus
      - tempo
      - grafana
      - service-registry
      - post-service
      - comment-service
      - album-service
      - photo-service
      - todo-service
      - user-service

networks:
  json-placeholder-service-network:
    driver: bridge
